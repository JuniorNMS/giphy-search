// Theme Variables
$themes: (
  light: (
    bg: #ffffff,
    text: #333333,
    primary: #007bff,
    header-bg: #f8f9fa,
  ),
  dark: (
    bg: #1a1a1a,
    text: #ffffff,
    primary: #4da3ff,
    header-bg: #2d2d2d,
  )
);

// Mixin for theme-aware properties
@mixin theme($property, $key, $theme-map: $themes) {
  @each $theme-name, $theme in $theme-map {
    [data-theme="#{$theme-name}"] & {
      #{$property}: map-get($theme, $key);
    }
  }
}

// Base styles
body {
  margin: 0;
  padding: 1rem;
  @include theme(background-color, bg);
  @include theme(color, text);
  transition: background-color 0.3s, color 0.3s;
}

header {
  @include theme(background-color, header-bg);
  padding: 1rem;
  border-radius: 8px;
  margin-bottom: 2rem;
}

button, input {
  @include theme(background-color, header-bg);
  @include theme(color, text);
  border: 1px solid;
  @include theme(border-color, text);
}

// Rest of your existing styles remain the same...
// (Keep the existing grid, form, and responsive styles)
// Variables
$font-title: 'Bungee Shade', cursive; // Uncommon Google Font
$breakpoint-mobile: 320px;

// Base Styles
body {
    margin: 1rem;
    font-family: Arial, sans-serif;
}

// Header (Flex for Desktop)
header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 2rem;

    @media (max-width: $breakpoint-mobile) {
        flex-direction: column;
        text-align: center;
    }
}

.site-title {
    font-family: $font-title;
}

// Navigation (Flex Row â†’ Column on Mobile)
nav {
    display: flex;
    gap: 1rem;

    @media (max-width: $breakpoint-mobile) {
        flex-direction: column;
        margin-top: 1rem;
    }
}

// Search Form (Flex for Input + Button)
#searchForm {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;

    input {
        flex: 1;
        padding: 0.5rem;
    }

    button {
        padding: 0.5rem 1rem;
        background: #007bff;
        color: white;
        border: none;
        cursor: pointer;
    }
}

// Custom Grid (Flex-Based)
.gif-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;

    .gif-item {
        flex: 1 0 calc(33.333% - 1rem); // 3 columns

        @media (max-width: $breakpoint-mobile) {
            flex: 1 0 100%; // 1 column
        }

        img {
            width: 100%;
            height: auto;
        }
    }
}